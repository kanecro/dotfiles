################################################################################
# --- OS固有の設定 ---
################################################################################
{{ if eq .chezmoi.os "darwin" -}}
# macOS用の設定

eval "$(/opt/homebrew/bin/brew shellenv)"
FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

{{ else if eq .chezmoi.os "linux" -}}
# Linux (Chromebook / WSL2) 用の設定

eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

{{ end -}}

################################################################################
# --- 共通の設定 ---
################################################################################
# Zshの補完システムを初期化
autoload -U compinit
compinit

# 便利なバインド
# ↑: ctr+p
# ↓: ctr+n
# →: ctr+f
# ←: ctr+b
# 先頭: ctr+a
# 最後尾: ctr+e
# 前削除: ctr+h
# 後削除: ctr+d
bindkey -e

# エディタ設定など
EDITOR='vim'
VISUAL='vim'

#--------------------------------------------------
# history
#--------------------------------------------------
HISTFILE=~/.zsh_history
HISTSIZE=1000000
SAVEHIST=1000000

setopt share_history           # 履歴を他のシェルとリアルタイム共有する
setopt hist_ignore_all_dups    # 同じコマンドをhistoryに残さない
setopt hist_ignore_space       # historyに保存するときに余分なスペースを削除する
setopt hist_reduce_blanks      # historyに保存するときに余分なスペースを削除する
setopt hist_save_no_dups       # 重複するコマンドが保存されるとき、古い方を削除する
setopt inc_append_history      # 実行時に履歴をファイルにに追加していく

# cd履歴管理(cdr)
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs

#--------------------------------------------------
# Zinit
#--------------------------------------------------
source "${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

#--------------------
# Load plugins
#--------------------
# シンタックスハイライト
zinit light zdharma-continuum/fast-syntax-highlighting
# 入力補完
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-completions
# コマンド履歴
# zinit light zdharma/history-search-multi-word

#----------
# anyframe
#----------
# 色々な履歴
zinit light mollifier/anyframe

zstyle ":anyframe:selector:" use fzf
zstyle ":anyframe:selector:fzf:" command 'fzf --extended'
# zstyle ":anyframe:selector:" use fzf-tmux
# zstyle ":anyframe:selector:fzf-tmux:" command 'fzf-tmux --extended'

# kill
bindkey '^xk' anyframe-widget-kill
# ディレクトリ履歴
bindkey '^xd' anyframe-widget-cdr
# コマンド実行履歴
# bindkey '^r' anyframe-widget-execute-history
bindkey '^r' anyframe-widget-put-history

# Starship Prompt
# StarshipはZinitで管理するのではなく、直接起動します
# Starshipは高速なので、Zinitで遅延ロードする必要はありません
eval "$(starship init zsh)"
# Load starship theme

#+--------------------------------------------------
# aliases
#+--------------------------------------------------
alias g="git"

alias ls="lsd"
alias l="lsd"
alias ll="lsd -l"
alias la="lsd -a"
alias lla="lsd -la"
alias lt="lsd --tree"

alias cat="bat"
